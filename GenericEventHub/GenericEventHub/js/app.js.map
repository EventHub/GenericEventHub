{"version":3,"file":"..\\js\\app.js","sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/directives.coffee","app/scripts/filters.coffee","app/scripts/services.coffee"],"names":[],"mappings":"AAAA;CAAA;;AAGA,CAHA,CAG4B,CAA5B,EAAM,EAAO,EAAe;;AAa5B,CAhBA,EAgBG,GAAH;EAEE,CADA,GAIF,GAAC,KAAD,EALW,CAKX,EALW;CAOT,kBAAmB;CAAnB,CAIsB,EAFtB,UAEE;CAAoB,CACL,IAAb,oBADkB;CAAA,CAEN,IAAZ,SAFkB;CAIpB,CAAoC,EANtC;CAMsC,CACrB,IAAb,gBADkC;CAAA,CAEtB,IAAZ,KAFkC;CAIpC,CAAmB,EAVrB;CAUqB,CACJ,IAAb,eADiB;CAAA,CAEL,IAAZ;CAEF,CAAgB,EAdlB;CAckB,CACD,IAAb,yBADc;CAAA,CAEF,IAAZ,cAFc;CAKhB,KAnBF;CAmBa,CAAa,IAAZ,MAAD;CArBb,KAEA;CAsBkB,IAAlB,YAAiB;CA/BR,EAKX;CArBA,CAgBA;CChBA;CAEA;AAFA;AAIA,CAJA,CAIkC,IAAlC,CAAO,EAAP;EAIE,CADA,GAKF,EANuB,CAMtB,EANsB;CAUrB,EAAmB,CAAnB,EAAM,GAAN;CAAA,CACkC,EAAlC,EAAM,GAA6B,SAAnC;CACS,EAAc,GAAf,KAAN;CADF,IAAkC;CADlC,CAakB,EAAlB,EAAM,EAAN,CAAmB;CACjB,CAAmC,EAAhC,CAA8C,CAAjD,GAAG,EAAkB;CACnB,cAAO;MADT;CAGE,cAAO;OAJO;CAblB,IAakB;CAMX,CAAgC,CAAzB,CAAd,EAAM,CAAQ,IAAd;CA7BqB,EAMvB;CA0BA,CAlCA;EAoCE,CADA,GAIF,EAL6B,GAK7B,EAL6B;CAM3B;CAAA,EAAiB,CAAjB,EAAM,CAAN;CAAA,EACgB,CAAhB,EAAM;CADN,CAEoC,CAA5B,CAAR,EAAQ;CACI,CAAc,CAA1B,MAAiD,EAAjD;CACE;CAAA,EAAgB,CAAhB;CAD8C,EAEpC,IAAV;CAFF,CAGE,GAH8C,GAG9C,CAAC;CACD;CADA,EACU,IAAV;CAJF,IAGE;CAZyB,EAK7B;CAWA,CAlDA;EAqDA,CAFE,GAEF,EAHkC,CAGjC;CACQ,EAAS,GAAV,KAAN;OACE;CAAA,CAAO,GAAP;CAAA,CACU,IADV,EACA;EAEA,MAJc;CAId,CAAO,GAAP;CAAA,CACU,KADV,CACA;OALc;CADlB;CAHkC,EAGlC;CAUA,CA/DA;EAgEY,CAAV,GAEF,EAHyB,CAGxB,CAHwB,CAGzB,EAHyB;CAIvB;CAAA,EAAU,CAAV,QAAsB;CAAtB,EACmB,CAAnB,EAAM,GAAN;CADA,CAEuC,CAAzB,CAAd,EAAM,CAAQ,IAAW;CAFzB,CAGuC,CAA1B,CAAb,GAAa,GAAb,CAAwB;CAHxB,EAIA,MAAuB,CAAb;CACR;CAAA,EAAe,CAAf;CAAA,EACsB,CAAiE,CAAvB,CAAhE,EAAyE,IAAzE,eAAsB;CACtB,EAAuC,CAAnC,CAAY,CAAhB,MAA6B,CAAoC;CACxD,GAAP,EAAM,GAAU,MAAhB;CAAsB,CAAM,EAAL,OAAD;AAAwB,CAAxB,CAAmB;CAD3C,SACE;MADF;CAGE;CAAA;0BAAA;CACE,EAAU,IAAV;CAAA,EACkB,CAAI,EAAd,IAAR;CADA,EAEkB,GAAV,IAAR;CAFA,EAGgB,CAAR,EAHR,CAGQ,GAAR;CAHA,GAIA,EAAM,CAAN,EAAgB,CAAhB;CALF;CAMA;CAAA;cAAA;4BAAA;CACE,EAAW,KAAX;CAAA,EACW,KAAX;CACA,GAAG,MAAH;CACE,EAAW,CAAU,CAAL,GAAhB;WAHF;CAAA,EAImB,EAAK,CAAf,IAAT;CAJA,EAKmB,GAAV,CALT,CAKS,EAAT;CALA,EAMiB,CAAR,CAAa,EANtB,CAMS,EAAT;CANA,GAOA,EAAM,EAAN,CAAgB;CARlB;wBATF;OAHoB;CAAtB,IAAsB;CAJtB,EA2Ba,CAAb,WA3BA;CAAA,EA4BA,IAAO,GAAP;CA5BA,EA8BiB,CAAjB,EAAM,CAAN,EAAiB;CACf,SAAU;CACD,CAAiB,EAA1B,EAAe,EAAf;CAhCF,IA8BiB;CA9BjB,EAkCoB,CAApB,EAAM,GAAc,CAApB;CACE,SAAU,EAAV;CACS,CAAiB,EAA1B,EAAe,EAAf;CApCF,IAkCoB;CAIb,EAAW,GAAZ,EAAN,CAAkB,EAAlB;CACE;CAAuB,EAAP,GAAM,OAAtB;CACE,CAAa,MAAb;CAAA,CACY,MAAZ,QADA;CAAA,CAGE,KADF;CACE,CAAS,KAAT,EAAS,CAAT;CAAS,kBACP;CADF,UAAS;SAHX;CAFc,OACA;CAxCpB,IAuCoB;CA1CK,EAGzB;CAiDA,CAnHA;EAmHwC,CAAT,GAC7B,EAD4B,GAC5B,EAD4B,CAC5B,EAD4B;CAE1B;CAAA,KAAM,GAAQ;CACZ;CAAA,EACE,EADF;CACE,CAAM,EAAN;CAAA,CACS,KAAT;CAFF;CAAA,CAGyB,CAAzB,QAAW;CAHX,CAI0B,EAA1B;CACA;CANF,IAAa;CAAb,EAOgB,CAAhB,EAAM,GAAU;CACd;CARF,IAOgB;GAGR,EAAR,IAAQ,EAAR;CACiB,MAAf,OAAc;CAZlB,IAWU;CAZkB,EAC5B;CAeF,CAnIA;EAmImC,CAAV,GACvB,EADsB,CACrB,EAAD,EADsB;CAEpB,EAAc,CAAd,EAAM;CAAN,CACyB,CAAzB,QAAW;CACT,EAAc,CAAd;CACO,EAAO,CAAd,EAAM,OAAN;CAFF,IAA+C;CAKxC,EAAS,GAAV,GAAW,EAAjB;CACE,EAAmB,CAAR,EAAX;CACY,CAAa,CAAzB,QAAW,EAAX;CAAsC,CAAO,EAAN,EAAY,EAAZ;CAAD,CAAmC,EAAnC,EAA2B;CAFnD,OAEd;CATJ,IAOkB;CARI,EACtB;CAxIF,CAIA;CCJA;CAEA;AAFA;AAKA,CALA,CAKiC,IAAjC,CAAO,EAAP,KAAiC,EAAjC;EAQA,CAFE,IAEF,EAHyB;EAKf,CAAR,MAAC,EAAD;CACM,EAAD,CAAH;CAHJ,IAEE;CALuB,EAGzB;CAbA,CAKA;CCLA;CAEA;AAFA;AAIA,CAJA,CAI8B,IAA9B,CAAO,MAAP;EAKA,CAFE,IAEF,EAHuB;GAIrB,MAAC,EAAD;CACS,CAA+B,EAAtC;CAFJ,IACE;CAJqB,EAGvB;CATA,CAIA;CCJA;CAEA;AAFA;AAIA,CAJA,CAI+B,CAEX,GAFpB,CAAO,EAAP;CAEoB,QAAG;CAAH","sourcesContent":["'use strict'\r\n\r\n# Declare app level module which depends on filters, and services\r\nApp = angular.module('app', [\r\n  'ngCookies'\r\n  'ngResource'\r\n  'ngRoute'\r\n  'app.controllers'\r\n  'app.directives'\r\n  'app.filters'\r\n  'app.services'\r\n  'partials'\r\n  'restangular'\r\n  'ui.bootstrap'\r\n])\r\n\r\nApp.config([\r\n  '$routeProvider'\r\n  '$locationProvider'\r\n  'RestangularProvider'\r\n\r\n($routeProvider, $locationProvider, RestangularProvider, config) ->\r\n\r\n  RestangularProvider.setBaseUrl(\"/api\")\r\n\r\n  $routeProvider\r\n\r\n    .when('/Dashboard', {\r\n      templateUrl: '/partials/Dashboard.html',\r\n      controller: 'DashboardCtrl'\r\n    })\r\n    .when('/Dashboard/Events/:eventID', {\r\n      templateUrl: '/partials/Event.html',\r\n      controller: 'EventCtrl'\r\n    })\r\n    .when('/Settings', {\r\n      templateUrl: '/partials/User.html',\r\n      controller: 'UserCtrl'\r\n    })\r\n    .when('/Admin', {\r\n      templateUrl: '/partials/AdminDashboard.html',\r\n      controller: 'AdminDashboardCtrl'\r\n    })\r\n    # Catch all\r\n    .otherwise({redirectTo: '/Dashboard'})\r\n\r\n  # Without server side support html5 must be disabled.\r\n  $locationProvider.html5Mode(false)\r\n])\r\n","'use strict'\r\n\r\n### Controllers ###\r\n\r\nangular.module('app.controllers', [])\r\n\r\n.controller('NavCtrl', [\r\n  '$scope'\r\n  '$location'\r\n  '$resource'\r\n  'Restangular'\r\n\r\n($scope, $location, $resource, Restangular) ->\r\n\r\n  # Uses the url to determine if the selected\r\n  # menu item should have the class active.\r\n  $scope.$location = $location\r\n  $scope.$watch('$location.path()', (path) ->\r\n    $scope.activeNavId = path || '/'\r\n  )\r\n\r\n  # getClass compares the current url with the id.\r\n  # If the current url starts with the id it returns 'active'\r\n  # otherwise it will return '' an empty string. E.g.\r\n  #\r\n  #   # current url = '/products/1'\r\n  #   getClass('/products') # returns 'active'\r\n  #   getClass('/orders') # returns ''\r\n  #\r\n  $scope.getClass = (id) ->\r\n    if $scope.activeNavId.substring(0, id.length) == id\r\n      return 'active'\r\n    else\r\n      return ''\r\n\r\n  $scope.user = Restangular.one('Users', 'Current').get().$object;\r\n])\r\n\r\n.controller('DashboardCtrl', [\r\n  '$scope'\r\n  'Restangular'\r\n  '$filter'\r\n\r\n($scope, Restangular, $filter) ->\r\n  $scope.loading = true\r\n  $scope.events = []\r\n  today = $filter('date')(new Date(), 'MM-dd-yyyy')\r\n  Restangular.one('Events', today).getList().then((data) ->\r\n    $scope.events = data\r\n    loading = false\r\n  , (response) ->\r\n    loading = false)\r\n])\r\n\r\n.controller('AdminDashboardCtrl', [\r\n  '$scope'\r\n\r\n($scope) ->\r\n  $scope.events = [\r\n    title: \"One\"\r\n    location: \"Here\"\r\n  ,\r\n    title: \"Two\"\r\n    location: \"There\"\r\n  ]\r\n])\r\n\r\n.controller('EventCtrl', [\r\n  '$scope', '$routeParams', 'Restangular', '$modal', '$timeout', '$route'\r\n\r\n($scope, $routeParams, Restangular, $modal, $timeout, $route) ->\r\n  eventID = $routeParams.eventID\r\n  $scope.attendees = []\r\n  $scope.user = Restangular.one('Users', 'Current').get().$object;\r\n  eventRoute = Restangular.one('Events', eventID)\r\n  eventRoute.get().then((data) ->\r\n    $scope.event = data\r\n    $scope.locationLink = \"http://maps.google.com?q=\" + $scope.event.Activity.Location.Name.split(' ').join('+')\r\n    if ($scope.event.UsersInEvent.length + $scope.event.GuestsInEvent.length == 0)\r\n      $scope.attendees.push({name:\"No one :(\", id: -1})\r\n    else\r\n      for user in $scope.event.UsersInEvent\r\n        userObj = {}\r\n        userObj['name'] = user.Name\r\n        userObj['type'] = 'user'\r\n        userObj['id'] = user.UserID\r\n        $scope.attendees.push(userObj)\r\n      for guest in $scope.event.GuestsInEvent\r\n        guestObj = {}\r\n        hostName = '?'\r\n        if guest.Host?\r\n          hostName = guest.Host.Name\r\n        guestObj['name'] = guest.Name + \" (\" + hostName + \")\"\r\n        guestObj['type'] = 'guest'\r\n        guestObj['id'] = guest.GuestID\r\n        $scope.attendees.push(guestObj)\r\n  )\r\n\r\n  connection = $.connection.ParticipantsHub\r\n  console.log connection\r\n\r\n  $scope.addUser = ->\r\n    eventRoute.post('AddUser')\r\n    $timeout($route.reload(), 2000)\r\n\r\n  $scope.removeUser = -> \r\n    eventRoute.post('RemoveUser')\r\n    $timeout($route.reload(), 2000)\r\n\r\n  $scope.addGuest = ->\r\n    modalInstance = $modal.open(\r\n      templateUrl: 'guestModal.html'\r\n      controller: 'GuestModalCtrl',\r\n      resolve:\r\n        eventID: ->\r\n          eventID\r\n    )\r\n])\r\n\r\n.controller('GuestModalCtrl', ['$scope','$modalInstance', 'Restangular', 'eventID', '$timeout', '$route'\r\n  ($scope, $modalInstance, Restangular, eventID, $timeout, $route) ->\r\n    $scope.add = (guestName) ->\r\n      guest = \r\n        Name: guestName\r\n        EventID: eventID\r\n      Restangular.one('Events',eventID).post('AddGuest', guest)\r\n      $timeout($route.reload(), 2000)\r\n      close()\r\n    $scope.cancel = ->\r\n      close()\r\n\r\n    close = ->\r\n      $modalInstance.dismiss('cancel')\r\n])\r\n\r\n.controller('UserCtrl', ['$scope', 'Restangular'\r\n  ($scope, Restangular) ->\r\n    $scope.Name = \"\"\r\n    Restangular.one('Users', 'Current').get().then((data) ->\r\n      $scope.user = data\r\n      $scope.Name = $scope.user.Name\r\n    )\r\n\r\n    $scope.update = (name) ->\r\n      $scope.user.Name = name\r\n      Restangular.one('Users', 'Name').post({'id': $scope.user.UserID, 'name': name})\r\n])","'use strict'\r\n\r\n### Directives ###\r\n\r\n# register the module with Angular\r\nangular.module('app.directives', [\r\n  # require the 'app.service' module\r\n  'app.services'\r\n])\r\n\r\n.directive('appVersion', [\r\n  'version'\r\n\r\n(version) ->\r\n\r\n  (scope, elm, attrs) ->\r\n    elm.text(version)\r\n])\r\n","'use strict'\r\n\r\n### Filters ###\r\n\r\nangular.module('app.filters', [])\r\n\r\n.filter('interpolate', [\r\n  'version',\r\n\r\n(version) ->\r\n  (text) ->\r\n    String(text).replace(/\\%VERSION\\%/mg, version)\r\n])\r\n","'use strict'\r\n\r\n### Sevices ###\r\n\r\nangular.module('app.services', [])\r\n\r\n.factory 'version', -> \"0.1\"\r\n"]}